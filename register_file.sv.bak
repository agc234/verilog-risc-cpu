module register_file #(parameter W = 32,
							  parameter D = 32)
							(input logic clk, rst,
							 input logic [4:0] A1, A2, A3,
							 input logic [31:0] WD3,
							 input logic WE3,
							 output logic [31:0] RD1,
							 output logic [31:0] RD2);
	
	logic [W-1:0] registers[D-1:0];
	
	always @(posedge clk or negedge rst)
	begin
		if(!rst) begin
			for(int i = 0; i < D; i++) begin
				registers[i] <= i;
			end
		end
		else begin
			if (WE3 == 1) registers[A3] <= WD3;
		end
	end
	
	assign RD1 = (A1 != 0) ? registers[A1] : 0;
	assign RD2 = (A2 != 0) ? registers[A2] : 0;
endmodule
